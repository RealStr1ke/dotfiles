#!/usr/bin/env node

const colors = require('colors');
const nid = require('node-id3');
const path = require('path');

const args = process.argv.slice(2);

function bold(arg) { return colors.bold(colors.blue(arg))};
function white(arg) { return colors.white(arg); };

console.log(colors.bold(colors.white('-'.repeat(process.stdout.columns))));

for (let file in args) {
    if (file > 0) {
        console.log(colors.bold(colors.white('-'.repeat(process.stdout.columns))));
    }

    file = args[file];
    const filePath = `${process.cwd()}/${file}`;

    const nidmd = nid.read(filePath, {
        exclude: ['USLT'],
        noRaw: true
    });

    nidmd.image = nidmd.raw = {};
    // console.log(nidmd);

    const metadata = {
        title: nidmd.title,
        artist: nidmd.artist,
        trackNumber: nidmd.trackNumber,
        album: nidmd.album,
        diskNumber: nidmd.partOfSet,
        albumArtist: nidmd.performerInfo.split('/')[0],
        genre: nidmd.genre,
    }

    console.log([
        `${bold('File:')} ${white(path.parse(filePath).base)}`,
        `${bold('Title:')} ${white(metadata.title)}`,
        `${bold('Artist:')} ${white(metadata.artist)}`,
        `${bold('Track Number:')} ${white(metadata.trackNumber)}`,
        `${bold('Album:')} ${white(metadata.album)}`,
        `${bold('Disk Number:')} ${white(metadata.albumNumber)}`,
        `${bold('Genre:')} ${white(metadata.genre)}`,
        `${bold('Album Artist:')} ${white(metadata.albumArtist)}`,
    ].join('\n'));
}
console.log(colors.bold(colors.white('-'.repeat(process.stdout.columns))));