#!/usr/bin/env node

const { exec, execSync, spawn, spawnSync } = require("child_process");

const icons = ["一", "二", "三", "四", "五", "六", "七", "八", "九"];

let occupiedWorkspaces = execSync("hyprctl workspaces -j | jq -rc '[ .[].id ] | sort_by( . )'").toString();
occupiedWorkspaces = JSON.parse(occupiedWorkspaces);

let focusedMonitor = execSync("hyprctl monitors -j | jq -rc '[ .[].focused ] | index(true)'").toString().replace(/\n$/, '');
focusedMonitor = parseInt(focusedMonitor);

let focusedWorkspace = execSync("hyprctl monitors -j | jq -rc '[ .[].activeWorkspace.id ]'").toString().replace(/\n$/, '');
focusedWorkspace = JSON.parse(focusedWorkspace)[focusedMonitor];

let monitors = execSync("hyprctl monitors -j | jq -rc '[ .[].id ] | sort_by( . )'").toString();
monitors = JSON.parse(monitors);

// Occupied and focused workspaces
let o1 = 0, o2 = 0, o3 = 0, o4 = 0, o5 = 0, o6 = 0, o7 = 0, o8 = 0, o9 = 0;
let f1 = 0, f2 = 0, f3 = 0, f4 = 0, f5 = 0, f6 = 0, f7 = 0, f8 = 0, f9 = 0;

// Workspace ranges based on focused monitor
let wsMin = focusedMonitor * 10 + 1;
let wsMax = focusedMonitor * 10 + 9;

// Set occupied and focused workspaces
for (let i = 0; i < occupiedWorkspaces.length; i++) {
    // Check if workspace is in range
    // console.log(`${occupiedWorkspaces[i]}: ${occupiedWorkspaces[i] >= wsMin && occupiedWorkspaces[i] <= wsMax}`)
    if (occupiedWorkspaces[i] >= wsMin && occupiedWorkspaces[i] <= wsMax) {
        
        // Set occupied workspace
        switch (occupiedWorkspaces[i]) {
            case wsMin:
                o1 = 1;
                break;
            case wsMin + 1:
                o2 = 1;
                break;
            case wsMin + 2:
                o3 = 1;
                break;
            case wsMin + 3:
                o4 = 1;
                break;
            case wsMin + 4:
                o5 = 1;
                break;
            case wsMin + 5:
                o6 = 1;
                break;
            case wsMin + 6:
                o7 = 1;
                break;
            case wsMin + 7:
                o8 = 1;
                break;
            case wsMin + 8:
                o9 = 1;
                break;
        }
    }
}

// Set focused workspace
switch (focusedWorkspace) {
    case wsMin:
        f1 = 1;
        break;
    case wsMin + 1:
        f2 = 1;
        break;
    case wsMin + 2:
        f3 = 1;
        break;
    case wsMin + 3:
        f4 = 1;
        break;
    case wsMin + 4:
        f5 = 1;
        break;
    case wsMin + 5:
        f6 = 1;
        break;
    case wsMin + 6:
        f7 = 1;
        break;
    case wsMin + 7:
        f8 = 1;
        break;
    case wsMin + 8:
        f9 = 1;
        break;
}

console.log([
    `(eventbox :onscroll "echo {} | sed -e 's/up/e+1/g' -e 's/down/e-1/g' | xargs hyprctl dispatch workspace"`,
    `    (box	:class "works"	:orientation "h" :spacing 5 :space-evenly "false" :valign "center"`,
    `        (button :onclick "~/.config/hypr/scripts/tools/workspaces workspace 1" :class "ws-btn 0${o1}${f1}" "${icons[1 - 1]}")`,
    `        (button :onclick "~/.config/hypr/scripts/tools/workspaces workspace 2" :class "ws-btn 0${o2}${f2}" "${icons[2 - 1]}")`,
    `        (button :onclick "~/.config/hypr/scripts/tools/workspaces workspace 3" :class "ws-btn 0${o3}${f3}" "${icons[3 - 1]}")`,
    `        (button :onclick "~/.config/hypr/scripts/tools/workspaces workspace 4" :class "ws-btn 0${o4}${f4}" "${icons[4 - 1]}")`,
    `        (button :onclick "~/.config/hypr/scripts/tools/workspaces workspace 5" :class "ws-btn 0${o5}${f5}" "${icons[5 - 1]}")`,
    `        (button :onclick "~/.config/hypr/scripts/tools/workspaces workspace 6" :class "ws-btn 0${o6}${f6}" "${icons[6 - 1]}")`,
    `        (button :onclick "~/.config/hypr/scripts/tools/workspaces workspace 7" :class "ws-btn 0${o7}${f7}" "${icons[7 - 1]}")`,
    `        (button :onclick "~/.config/hypr/scripts/tools/workspaces workspace 8" :class "ws-btn 0${o8}${f8}" "${icons[8 - 1]}")`,
    `        (button :onclick "~/.config/hypr/scripts/tools/workspaces workspace 9" :class "ws-btn 0${o9}${f9}" "${icons[9 - 1]}")`,
    `    )`,
    `)`
].join("\n"));